'''
This is test script of zernike moment and zernike descriptor
Test is done for function listed below
1.make nlm list
2.calc_geomet_moment
3.calc_zernike_moment
4.generate zernike descriptor(cofirm the rotation invariants)
'''

# Import modules
from zernike import zernike_moment
import numpy as np
import unittest

class TestZernike(unittest.TestCase):
    '''
    test class of zernike
    '''

    def test_make_list(self):
        zd = zernike_moment.ZernikeDescriptor(3)
        zd.make_nl_lst()
        zd.add_mvalue()
        actual = zd.nlm_lst
        expect = [[[3, 1, 0], [3, 1, 1]],
                  [[3, 3, 0], [3, 3, 1], [3, 3, 2], [3, 3, 3]]]
        self.assertEqual(actual, expect)

    def test_calc_normal_geomom(self):
        lst = [0, 1, 2]
        POSCAR_PATH = './POSCAR'
        cut_off = 6
        atom_info = None
        actual = zernike_moment.calc_geomet_moment(lst, POSCAR_PATH, cut_off,
                                                   atom_info)
        expect = np.array([38/27] * 4).reshape(4, 1)
        self.assertEqual(actual, expect)

if __name__ == '__main__':
    unittest.main()
